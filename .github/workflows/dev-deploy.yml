name: Build and Deploy Docker Image

on:
  push:
    branches:
      - develop

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Build
        uses: docker/setup-buildx-action@v1

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Get env from github action secret
        run: |
          touch ./.env.local

          echo "${{ secrets.DEV_ENV }}" > ./.env.local

      - name: Build, tag, and push image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ secrets.DEV_ECR_REGISTRY }}
          ECR_REPOSITORY: ${{ secrets.DEV_ECR_REPOSITORY }}
          IMAGE_TAG: latest
        run: |
          docker build -t liket-mobile-dev-frontend-server-repository .
          docker tag liket-mobile-dev-frontend-server-repository:latest $ECR_REGISTRY/$ECR_REPOSITORY:latest
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Deploy to EC2
        env:
          HOST: ${{ secrets.EC2_HOST }}
          KEY: ${{ secrets.EC2_KEY }}
          USER: ubuntu
        run: |
          echo "$KEY" > key.pem
          chmod 400 key.pem
          ssh -o StrictHostKeyChecking=no -i key.pem $USER@$HOST << 'EOF'
            aws ecr get-login-password --region ${{ secrets.AWS_REGION }} | docker login --username AWS --password-stdin ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com
            docker pull ${{ secrets.DEV_ECR_REGISTRY }}/${{ secrets.DEV_ECR_REPOSITORY }}:latest
            docker stop ${{ secrets.DEV_SERVER_CONTAINER_NAME }} || true
            docker rm ${{ secrets.DEV_SERVER_CONTAINER_NAME }} || true
            ls $ENV_FILE_PATH
            
            docker run -d -p 4000:3000 --name ${{ secrets.DEV_SERVER_CONTAINER_NAME }} ${{ secrets.DEV_ECR_REGISTRY }}/${{ secrets.DEV_ECR_REPOSITORY }}:latest
          EOF
